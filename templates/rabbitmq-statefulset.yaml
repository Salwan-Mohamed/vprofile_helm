apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.rabbitmq.name }}
  namespace: {{ .Values.namespaceConfig.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.rabbitmq.name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    environment: {{ .Values.global.environment }}
    app: {{ .Values.rabbitmq.name }}
spec:
  serviceName: {{ .Values.rabbitmq.name }}-service
  replicas: {{ .Values.rabbitmq.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.rabbitmq.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.rabbitmq.name }}
        app.kubernetes.io/name: {{ .Values.rabbitmq.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: rabbitmq
        image: {{ .Values.rabbitmq.image.repository }}:{{ .Values.rabbitmq.image.tag }}
        imagePullPolicy: {{ .Values.rabbitmq.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.rabbitmq.service.port }}
          name: amqp
        - containerPort: {{ .Values.rabbitmq.service.managementPort }}
          name: management
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: rabbitmq-user
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: rabbitmq-password
        resources:
          requests:
            memory: {{ .Values.rabbitmq.resources.requests.memory | quote }}
            cpu: {{ .Values.rabbitmq.resources.requests.cpu | quote }}
          limits:
            memory: {{ .Values.rabbitmq.resources.limits.memory | quote }}
            cpu: {{ .Values.rabbitmq.resources.limits.cpu | quote }}
        livenessProbe:
          exec:
            command: ["rabbitmq-diagnostics", "status"]
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command: ["rabbitmq-diagnostics", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        - name: rabbitmq-config
          mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
      volumes:
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.rabbitmq.name }}-service
  namespace: {{ .Values.namespaceConfig.name }}
  labels:
    app: {{ .Values.rabbitmq.name }}
    app.kubernetes.io/name: {{ .Values.rabbitmq.name }}-service
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    environment: {{ .Values.global.environment }}
spec:
  ports:
  - port: {{ .Values.rabbitmq.service.port }}
    targetPort: amqp
    name: amqp
  - port: {{ .Values.rabbitmq.service.managementPort }}
    targetPort: management
    name: management
  selector:
    app: {{ .Values.rabbitmq.name }}